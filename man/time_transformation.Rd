% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/time_transformation.R
\name{time_transformation}
\alias{time_transformation}
\alias{win2UnixTime}
\alias{win2UnixTime2}
\alias{uxthrt}
\alias{sec2str}
\title{Convert common time formats.}
\usage{
win2UnixTime(time)

win2UnixTime2(time)

uxthrt(time, tz = "Europe/Berlin")

sec2str(time, digits = 2)
}
\arguments{
\item{time}{A numerical value representing a time}
}
\description{
Convert some common time formats into other common time formats.
Most functions use \code{data.table}, since this package handles the
very large floats much better than \code{base}.
}
\details{
\code{win2UnixTime}: Converts the Windows time format to Unix time.
\emph{Windows Time} := 100 ns since 1601-01-01 at 00:00:00.0
\emph{Unix Time} := seconds since 1970-01-01 at 00:00:00.0
Note: difftime("1970-01-01", "1601-01-01", units="secs") is 692 s shorter
than the value below
Reason: The value below is the diff in UTC (extended back to 1601), while
        difftime() considers the time jump of 6:32 min on 1893-04-01 in
        Berlin when switching from local time to CET.

\code{win2UnixTime2}: Implementation that uses lubridate. Returns a data
class.

\code{uxt2hrt}: Converts a Unix time into a human readable time. Returns a
data class.

\code{sec2str}: Converts seconds to a \emph{HH:MM:SS.MS} format. It handles
milliseconds well, is much short than the alternatives, and returns a string
instead of a date class.
}
\examples{

# Convert seconds into a HH:MM:SS.MS format
seconds_to_string(3612.5)

}
